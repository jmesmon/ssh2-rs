var searchIndex = {};
searchIndex['ssh2'] = {"items":[[0,"","ssh2","Rust bindings to libssh2, an SSH client library."],[3,"Agent","","A structure representing a connection to an SSH agent."],[3,"Identities","","An iterator over the identities found in an SSH agent."],[3,"PublicKey","","A public key which is extracted from an SSH agent."],[3,"Channel","","A channel represents a portion of an SSH connection on which data can be\nread and written."],[3,"ExitSignal","","Data received from when a program exits with a signal."],[12,"exit_signal","","The exit signal received, if the program did not exit cleanly. Does not\ncontain a SIG prefix",0],[12,"error_message","","Error message provided by the remote server (if any)",0],[12,"lang_tag","","Language tag provided by the remote server (if any)",0],[3,"ReadWindow","","Description of the read window as returned by `Channel::read_window`"],[12,"remaining","","The number of bytes which the remote end may send without overflowing\nthe window limit.",1],[12,"available","","The number of bytes actually available to be read.",1],[12,"window_size_initial","","The window_size_initial as defined by the channel open request",1],[3,"WriteWindow","","Description of the write window as returned by `Channel::write_window`"],[12,"remaining","","The number of bytes which may be safely written on the channel without\nblocking.",2],[12,"window_size_initial","","The window_size_initial as defined by the channel open request",2],[3,"Error","","Representation of an error that can occur within libssh2"],[3,"KnownHosts","","A set of known hosts which can be used to verify the identity of a remote\nserver."],[3,"Hosts","","Iterator over the hosts in a `KnownHosts` structure."],[3,"Host","","Structure representing a known host as part of a `KnownHosts` structure."],[3,"Listener","","A listener represents a forwarding port from the remote server."],[3,"Session","","An SSH session, typically representing one TCP connection."],[3,"ScpFileStat","","Metadata returned about a remote file when received via `scp`."],[3,"Sftp","","A handle to a remote filesystem over SFTP."],[3,"OpenFlags","","Options that can be used to configure how a file is opened"],[3,"File","","A file handle to an SFTP connection."],[3,"FileStat","","Metadata information about a remote file."],[12,"size","","File size, in bytes of the file.",3],[12,"uid","","Owner ID of the file",3],[12,"gid","","Owning group of the file",3],[12,"perm","","Permissions (mode) of the file",3],[12,"atime","","Last access time of the file",3],[12,"mtime","","Last modification time of the file",3],[3,"RenameFlags","","Options to `Sftp::rename`"],[4,"OpenType","","How to open a file handle with libssh2."],[13,"File","","Specify that a file shoud be opened.",4],[13,"Dir","","Specify that a directory should be opened.",4],[4,"DisconnectCode","",""],[13,"HostNotAllowedToConnect","","",5],[13,"ProtocolError","","",5],[13,"KeyExchangeFailed","","",5],[13,"Reserved","","",5],[13,"MacError","","",5],[13,"CompressionError","","",5],[13,"ServiceNotAvailable","","",5],[13,"ProtocolVersionNotSupported","","",5],[13,"HostKeyNotVerifiable","","",5],[13,"ConnectionLost","","",5],[13,"ByApplication","","",5],[13,"TooManyConnections","","",5],[13,"AuthCancelledByUser","","",5],[13,"NoMoreAuthMethodsAvailable","","",5],[13,"IllegalUserName","","",5],[4,"HostKeyType","",""],[13,"Unknown","","",6],[13,"Rsa","","",6],[13,"Dss","","",6],[4,"MethodType","",""],[13,"Kex","","",7],[13,"HostKey","","",7],[13,"CryptCs","","",7],[13,"CryptSc","","",7],[13,"MacCs","","",7],[13,"MacSc","","",7],[13,"CompCs","","",7],[13,"CompSc","","",7],[13,"LangCs","","",7],[13,"LangSc","","",7],[4,"HashType","",""],[13,"Md5","","",8],[13,"Sha1","","",8],[4,"KnownHostFileKind","",""],[13,"OpenSSH","","",9],[4,"CheckResult","","Possible results of a call to `KnownHosts::check`"],[13,"Match","","Hosts and keys match",10],[13,"Mismatch","","Host was found, but the keys didn't match!",10],[13,"NotFound","","No host match was found",10],[13,"Failure","","Something prevented the check to be made",10],[4,"KnownHostKeyFormat","",""],[13,"Rsa1","","",11],[13,"SshRsa","","",11],[13,"SshDss","","",11],[5,"init","","Initialize the libssh2 library."],[11,"connect","","Connect to an ssh-agent running on the system.",12],[11,"disconnect","","Close a connection to an ssh-agent.",12],[11,"list_identities","","Request an ssh-agent to list of public keys, and stores them in the\ninternal collection of the handle.",12],[11,"identities","","Get an iterator over the identities of this agent.",12],[11,"userauth","","Attempt public key authentication with the help of ssh-agent.",12],[11,"drop","","",12],[11,"next","","",13],[11,"blob","","Return the data of this public key.",14],[11,"comment","","Returns the comment in a printable format",14],[11,"setenv","","Set an environment variable in the remote channel's process space.",15],[11,"request_pty","","Request a PTY on an established channel.",15],[11,"request_pty_size","","Request a PTY of a specified size",15],[11,"exec","","Execute a command",15],[11,"shell","","Start a shell",15],[11,"subsystem","","Request a subsystem be started.",15],[11,"process_startup","","Initiate a request on a session type channel.",15],[11,"flush_stderr","","Flush the stderr buffers.",15],[11,"flush_stream","","Flush the read buffer for a given channel instance.",15],[11,"write_stderr","","Write data to the channel stderr stream.",15],[11,"write_stream","","Write data to a channel stream.",15],[11,"read_stderr","","Read from the stderr stream .",15],[11,"read_stream","","Attempt to read data from an active channel stream.",15],[11,"exit_status","","Returns the exit code raised by the process running on the remote host\nat the other end of the named channel.",15],[11,"exit_signal","","Get the remote exit signal.",15],[11,"read_window","","Check the status of the read window.",15],[11,"write_window","","Check the status of the write window.",15],[11,"adjust_receive_window","","Adjust the receive window for a channel by adjustment bytes.",15],[11,"limit_read","","Artificially limit the number of bytes that will be read from this\nchannel.",15],[11,"eof","","Check if the remote host has sent an EOF status for the selected stream.",15],[11,"send_eof","","Tell the remote host that no further data will be sent on the specified\nchannel.",15],[11,"wait_eof","","Wait for the remote end to acknowledge an EOF request.",15],[11,"close","","Close an active data channel.",15],[11,"wait_close","","Enter a temporary blocking state until the remote host closes the named\nchannel.",15],[11,"write","","",15],[11,"flush","","",15],[11,"read","","",15],[11,"drop","","",15],[11,"fmt","","",16],[11,"last_error","","Generate the last error that occurred for a `Session`.",16],[11,"new","","Create a new error for the given code and message",16],[11,"eof","","Generate an error that represents EOF",16],[11,"from_errno","","Construct an error from an error code from libssh2",16],[11,"message","","Get the message corresponding to this error",16],[11,"code","","Return the code for this error",16],[11,"fmt","","",16],[11,"description","","",16],[11,"from_error","","",16],[11,"read_file","","Reads a collection of known hosts from a specified file and adds them to\nthe collection of known hosts.",17],[11,"read_str","","Read a line as if it were from a known hosts file.",17],[11,"write_file","","Writes all the known hosts to the specified file using the specified\nfile format.",17],[11,"write_string","","Converts a single known host to a single line of output for storage,\nusing the 'type' output format.",17],[11,"iter","","Create an iterator over all of the known hosts in this structure.",17],[11,"remove","","Delete a known host entry from the collection of known hosts.",17],[11,"check","","Checks a host and its associated key against the collection of known\nhosts, and returns info back about the (partially) matched entry.",17],[11,"check_port","","Same as `check`, but takes a port as well.",17],[11,"add","","Adds a known host to the collection of known hosts.",17],[11,"drop","","",17],[11,"next","","",18],[11,"name","","This is `None` if no plain text host name exists.",19],[11,"key","","Returns the key in base64/printable format",19],[11,"accept","","Accept a queued connection from this listener.",20],[11,"drop","","",20],[11,"new","","Initializes an SSH session object.",21],[11,"set_banner","","Set the SSH protocol banner for the local client",21],[11,"set_allow_sigpipe","","Flag indicating whether SIGPIPE signals will be allowed or blocked.",21],[11,"set_compress","","Flag indicating whether this library will attempt to negotiate\ncompression.",21],[11,"set_blocking","","Set or clear blocking mode on session",21],[11,"is_blocking","","Returns whether the session was previously set to nonblocking.",21],[11,"set_timeout","","Set timeout for blocking functions.",21],[11,"timeout","","Returns the timeout, in milliseconds, for how long blocking calls may\nwait until they time out.",21],[11,"handshake","","Begin transport layer protocol negotiation with the connected host.",21],[11,"userauth_password","","Attempt basic password authentication.",21],[11,"userauth_agent","","Attempt to perform SSH agent authentication.",21],[11,"userauth_pubkey_file","","Attempt public key authentication using a PEM encoded private key file\nstored on disk.",21],[11,"userauth_hostbased_file","","",21],[11,"authenticated","","Indicates whether or not the named session has been successfully\nauthenticated.",21],[11,"auth_methods","","Send a SSH_USERAUTH_NONE request to the remote host.",21],[11,"method_pref","","Set preferred key exchange method",21],[11,"methods","","Return the currently active algorithms.",21],[11,"supported_algs","","Get list of supported algorithms.",21],[11,"agent","","Init an ssh-agent handle.",21],[11,"known_hosts","","Init a collection of known hosts for this session.",21],[11,"channel_session","","Establish a new session-based channel.",21],[11,"channel_direct_tcpip","","Tunnel a TCP connection through an SSH session.",21],[11,"channel_forward_listen","","Instruct the remote SSH server to begin listening for inbound TCP/IP\nconnections.",21],[11,"scp_recv","","Request a file from the remote host via SCP.",21],[11,"scp_send","","Send a file to the remote host via SCP.",21],[11,"sftp","","Open a channel and initialize the SFTP subsystem.",21],[11,"channel_open","","Allocate a new channel for exchanging data with the server.",21],[11,"banner","","Get the remote banner",21],[11,"banner_bytes","","See `banner`.",21],[11,"host_key","","Get the remote key.",21],[11,"host_key_hash","","Returns the computed digest of the remote system's hostkey.",21],[11,"set_keepalive","","Set how often keepalive messages should be sent.",21],[11,"keepalive_send","","Send a keepalive message if needed.",21],[11,"disconnect","","Terminate the transport layer.",21],[11,"rc","","Translate a return code into a Rust-`Result`.",21],[11,"drop","","",21],[11,"size","","Returns the size of the remote file.",22],[11,"mode","","Returns the listed mode of the remote file.",22],[11,"is_dir","","Returns whether the remote file is a directory.",22],[11,"is_file","","Returns whether the remote file is a regular file.",22],[11,"hash","","",23],[11,"cmp","","",23],[11,"partial_cmp","","",23],[11,"lt","","",23],[11,"le","","",23],[11,"gt","","",23],[11,"ge","","",23],[11,"clone","","",23],[11,"eq","","",23],[11,"ne","","",23],[11,"empty","","Returns an empty set of flags.",23],[11,"all","","Returns the set containing all flags.",23],[11,"bits","","Returns the raw value of the flags currently stored.",23],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",23],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",23],[11,"is_empty","","Returns `true` if no flags are currently stored.",23],[11,"is_all","","Returns `true` if all flags are currently set.",23],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",23],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",23],[11,"insert","","Inserts the specified flags in-place.",23],[11,"remove","","Removes the specified flags in-place.",23],[11,"toggle","","Toggles the specified flags in-place.",23],[11,"bitor","","Returns the union of the two sets of flags.",23],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",23],[11,"bitand","","Returns the intersection between the two sets of flags.",23],[11,"sub","","Returns the set difference of the two sets of flags.",23],[11,"not","","Returns the complement of this set of flags.",23],[11,"hash","","",24],[11,"cmp","","",24],[11,"partial_cmp","","",24],[11,"lt","","",24],[11,"le","","",24],[11,"gt","","",24],[11,"ge","","",24],[11,"clone","","",24],[11,"eq","","",24],[11,"ne","","",24],[11,"empty","","Returns an empty set of flags.",24],[11,"all","","Returns the set containing all flags.",24],[11,"bits","","Returns the raw value of the flags currently stored.",24],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",24],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",24],[11,"is_empty","","Returns `true` if no flags are currently stored.",24],[11,"is_all","","Returns `true` if all flags are currently set.",24],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",24],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",24],[11,"insert","","Inserts the specified flags in-place.",24],[11,"remove","","Removes the specified flags in-place.",24],[11,"toggle","","Toggles the specified flags in-place.",24],[11,"bitor","","Returns the union of the two sets of flags.",24],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",24],[11,"bitand","","Returns the intersection between the two sets of flags.",24],[11,"sub","","Returns the set difference of the two sets of flags.",24],[11,"not","","Returns the complement of this set of flags.",24],[11,"open_mode","","Open a handle to a file.",25],[11,"open","","Helper to open a file in the `Read` mode.",25],[11,"create","","Helper to create a file in write-only mode with truncation.",25],[11,"opendir","","Helper to open a directory for reading its contents.",25],[11,"readdir","","Convenience function to read the files in a directory.",25],[11,"mkdir","","Create a directory on the remote file system.",25],[11,"rmdir","","Remove a directory from the remote file system.",25],[11,"stat","","Get the metadata for a file, performed by stat(2)",25],[11,"lstat","","Get the metadata for a file, performed by lstat(2)",25],[11,"setstat","","Set the metadata for a file.",25],[11,"symlink","","Create a symlink at `target` pointing at `path`.",25],[11,"readlink","","Read a symlink at `path`.",25],[11,"realpath","","Resolve the real path for `path`.",25],[11,"rename","","Rename a filesystem object on the remote filesystem.",25],[11,"last_error","","Peel off the last error to happen on this SFTP instance.",25],[11,"rc","","Translates a return code into a Rust-`Result`",25],[11,"drop","","",25],[11,"setstat","","Set the metadata for this handle.",26],[11,"stat","","Get the metadata for this handle.",26],[11,"statvfs","","",26],[11,"readdir","","Reads a block of data from a handle and returns file entry information\nfor the next entry, if any.",26],[11,"fsync","","This function causes the remote server to synchronize the file data and\nmetadata to disk (like fsync(2)).",26],[11,"read","","",26],[11,"write","","",26],[11,"flush","","",26],[11,"seek","","Move the file handle's internal pointer to an arbitrary location.",26],[11,"drop","","",26],[11,"from_raw","","Creates a new instance of a stat from a raw instance.",3],[11,"raw","","Convert this stat structure to its raw representation.",3],[7,"FLUSH_EXTENDED_DATA","","When passed to `Channel::flush_stream`, flushes all extended data\nsubstreams."],[7,"FLUSH_ALL","","When passed to `Channel::flush_stream`, flushes all substream."],[7,"EXTENDED_DATA_STDERR","","Stream ID of the stderr channel for stream-related methods on `Channel`"],[17,"READ","","Open the file for reading."],[17,"WRITE","","Open the file for writing. If both this and Read are specified, the file is opened for both reading and writing"],[17,"APPEND","","Force all writes to append data at the end of the file."],[17,"CREATE","","If this flag is specified, then a new file will be created if one does not already exist (if Truncate is specified, the new file will be truncated to zero length if it previously exists)"],[17,"TRUNCATE","","Forces an existing file with the same name to be truncated to zero length when creating a file by specifying `Create`. Using this flag implies the `Create` flag."],[17,"EXCLUSIVE","","Causes the request to fail if the named file already exists. Using this flag implies the `Create` flag."],[17,"ATOMIC","","Inform the remote that an atomic rename operation is desired if available"],[17,"OVERWRITE","","In a rename operation, overwrite the destination if it already exists. If this flag is not present then it is an error if the destination already exists"],[17,"NATIVE","","Inform the remote end that the native system calls for renaming should be used"]],"paths":[[3,"ExitSignal"],[3,"ReadWindow"],[3,"WriteWindow"],[3,"FileStat"],[4,"OpenType"],[4,"DisconnectCode"],[4,"HostKeyType"],[4,"MethodType"],[4,"HashType"],[4,"KnownHostFileKind"],[4,"CheckResult"],[4,"KnownHostKeyFormat"],[3,"Agent"],[3,"Identities"],[3,"PublicKey"],[3,"Channel"],[3,"Error"],[3,"KnownHosts"],[3,"Hosts"],[3,"Host"],[3,"Listener"],[3,"Session"],[3,"ScpFileStat"],[3,"OpenFlags"],[3,"RenameFlags"],[3,"Sftp"],[3,"File"]]};
searchIndex['libssh2-sys'] = {"items":[[0,"","libssh2-sys",""],[3,"libssh2_agent_publickey","",""],[12,"magic","","",0],[12,"node","","",0],[12,"blob","","",0],[12,"blob_len","","",0],[12,"comment","","",0],[3,"libssh2_knownhost","",""],[12,"magic","","",1],[12,"node","","",1],[12,"name","","",1],[12,"key","","",1],[12,"typemask","","",1],[3,"LIBSSH2_SFTP_ATTRIBUTES","",""],[12,"flags","","",2],[12,"filesize","","",2],[12,"uid","","",2],[12,"gid","","",2],[12,"permissions","","",2],[12,"atime","","",2],[12,"mtime","","",2],[3,"LIBSSH2_SFTP_STATVFS","",""],[12,"f_bsize","","",3],[12,"f_frsize","","",3],[12,"f_blocks","","",3],[12,"f_bfree","","",3],[12,"f_bavail","","",3],[12,"f_files","","",3],[12,"f_ffree","","",3],[12,"f_favail","","",3],[12,"f_fsid","","",3],[12,"f_flag","","",3],[12,"f_namemax","","",3],[4,"LIBSSH2_SESSION","",""],[4,"LIBSSH2_AGENT","",""],[4,"LIBSSH2_CHANNEL","",""],[4,"LIBSSH2_LISTENER","",""],[4,"LIBSSH2_KNOWNHOSTS","",""],[4,"LIBSSH2_SFTP","",""],[4,"LIBSSH2_SFTP_HANDLE","",""],[5,"issue_14344_workaround","",""],[5,"libssh2_init","",""],[5,"libssh2_exit","",""],[5,"libssh2_free","",""],[5,"libssh2_hostkey_hash","",""],[5,"libssh2_session_init_ex","",""],[5,"libssh2_session_free","",""],[5,"libssh2_session_banner_get","",""],[5,"libssh2_session_banner_set","",""],[5,"libssh2_session_disconnect_ex","",""],[5,"libssh2_session_flag","",""],[5,"libssh2_session_get_blocking","",""],[5,"libssh2_session_get_timeout","",""],[5,"libssh2_session_hostkey","",""],[5,"libssh2_session_method_pref","",""],[5,"libssh2_session_methods","",""],[5,"libssh2_session_set_blocking","",""],[5,"libssh2_session_set_timeout","",""],[5,"libssh2_session_supported_algs","",""],[5,"libssh2_session_last_error","",""],[5,"libssh2_session_handshake","",""],[5,"libssh2_keepalive_config","",""],[5,"libssh2_keepalive_send","",""],[5,"libssh2_agent_init","",""],[5,"libssh2_agent_free","",""],[5,"libssh2_agent_connect","",""],[5,"libssh2_agent_disconnect","",""],[5,"libssh2_agent_list_identities","",""],[5,"libssh2_agent_get_identity","",""],[5,"libssh2_agent_userauth","",""],[5,"libssh2_channel_free","",""],[5,"libssh2_channel_close","",""],[5,"libssh2_channel_wait_closed","",""],[5,"libssh2_channel_wait_eof","",""],[5,"libssh2_channel_eof","",""],[5,"libssh2_channel_process_startup","",""],[5,"libssh2_channel_flush_ex","",""],[5,"libssh2_channel_write_ex","",""],[5,"libssh2_channel_get_exit_signal","",""],[5,"libssh2_channel_get_exit_status","",""],[5,"libssh2_channel_open_ex","",""],[5,"libssh2_channel_read_ex","",""],[5,"libssh2_channel_setenv_ex","",""],[5,"libssh2_channel_send_eof","",""],[5,"libssh2_channel_request_pty_ex","",""],[5,"libssh2_channel_request_pty_size_ex","",""],[5,"libssh2_channel_window_read_ex","",""],[5,"libssh2_channel_window_write_ex","",""],[5,"libssh2_channel_receive_window_adjust2","",""],[5,"libssh2_channel_direct_tcpip_ex","",""],[5,"libssh2_channel_forward_accept","",""],[5,"libssh2_channel_forward_cancel","",""],[5,"libssh2_channel_forward_listen_ex","",""],[5,"libssh2_userauth_authenticated","",""],[5,"libssh2_userauth_list","",""],[5,"libssh2_userauth_hostbased_fromfile_ex","",""],[5,"libssh2_userauth_publickey_fromfile_ex","",""],[5,"libssh2_userauth_password_ex","",""],[5,"libssh2_knownhost_free","",""],[5,"libssh2_knownhost_addc","",""],[5,"libssh2_knownhost_check","",""],[5,"libssh2_knownhost_checkp","",""],[5,"libssh2_knownhost_del","",""],[5,"libssh2_knownhost_get","",""],[5,"libssh2_knownhost_readfile","",""],[5,"libssh2_knownhost_readline","",""],[5,"libssh2_knownhost_writefile","",""],[5,"libssh2_knownhost_writeline","",""],[5,"libssh2_knownhost_init","",""],[5,"libssh2_scp_recv","",""],[5,"libssh2_scp_send64","",""],[5,"libssh2_sftp_init","",""],[5,"libssh2_sftp_shutdown","",""],[5,"libssh2_sftp_last_error","",""],[5,"libssh2_sftp_open_ex","",""],[5,"libssh2_sftp_close_handle","",""],[5,"libssh2_sftp_mkdir_ex","",""],[5,"libssh2_sftp_fsync","",""],[5,"libssh2_sftp_fstat_ex","",""],[5,"libssh2_sftp_fstatvfs","",""],[5,"libssh2_sftp_stat_ex","",""],[5,"libssh2_sftp_read","",""],[5,"libssh2_sftp_symlink_ex","",""],[5,"libssh2_sftp_rename_ex","",""],[5,"libssh2_sftp_rmdir_ex","",""],[5,"libssh2_sftp_write","",""],[5,"libssh2_sftp_tell64","",""],[5,"libssh2_sftp_seek64","",""],[5,"libssh2_sftp_readdir_ex","",""],[6,"LIBSSH2_ALLOC_FUNC","",""],[6,"LIBSSH2_FREE_FUNC","",""],[6,"LIBSSH2_REALLOC_FUNC","",""],[6,"LIBSSH2_PASSWD_CHANGEREQ_FUNC","",""],[6,"libssh2_socket_t","",""],[17,"SSH_DISCONNECT_HOST_NOT_ALLOWED_TO_CONNECT","",""],[17,"SSH_DISCONNECT_PROTOCOL_ERROR","",""],[17,"SSH_DISCONNECT_KEY_EXCHANGE_FAILED","",""],[17,"SSH_DISCONNECT_RESERVED","",""],[17,"SSH_DISCONNECT_MAC_ERROR","",""],[17,"SSH_DISCONNECT_COMPRESSION_ERROR","",""],[17,"SSH_DISCONNECT_SERVICE_NOT_AVAILABLE","",""],[17,"SSH_DISCONNECT_PROTOCOL_VERSION_NOT_SUPPORTED","",""],[17,"SSH_DISCONNECT_HOST_KEY_NOT_VERIFIABLE","",""],[17,"SSH_DISCONNECT_CONNECTION_LOST","",""],[17,"SSH_DISCONNECT_BY_APPLICATION","",""],[17,"SSH_DISCONNECT_TOO_MANY_CONNECTIONS","",""],[17,"SSH_DISCONNECT_AUTH_CANCELLED_BY_USER","",""],[17,"SSH_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE","",""],[17,"SSH_DISCONNECT_ILLEGAL_USER_NAME","",""],[17,"LIBSSH2_FLAG_SIGPIPE","",""],[17,"LIBSSH2_FLAG_COMPRESS","",""],[17,"LIBSSH2_HOSTKEY_TYPE_UNKNOWN","",""],[17,"LIBSSH2_HOSTKEY_TYPE_RSA","",""],[17,"LIBSSH2_HOSTKEY_TYPE_DSS","",""],[17,"LIBSSH2_METHOD_KEX","",""],[17,"LIBSSH2_METHOD_HOSTKEY","",""],[17,"LIBSSH2_METHOD_CRYPT_CS","",""],[17,"LIBSSH2_METHOD_CRYPT_SC","",""],[17,"LIBSSH2_METHOD_MAC_CS","",""],[17,"LIBSSH2_METHOD_MAC_SC","",""],[17,"LIBSSH2_METHOD_COMP_CS","",""],[17,"LIBSSH2_METHOD_COMP_SC","",""],[17,"LIBSSH2_METHOD_LANG_CS","",""],[17,"LIBSSH2_METHOD_LANG_SC","",""],[17,"LIBSSH2_CHANNEL_PACKET_DEFAULT","",""],[17,"LIBSSH2_CHANNEL_WINDOW_DEFAULT","",""],[17,"LIBSSH2_ERROR_BANNER_RECV","",""],[17,"LIBSSH2_ERROR_BANNER_SEND","",""],[17,"LIBSSH2_ERROR_INVALID_MAC","",""],[17,"LIBSSH2_ERROR_KEX_FAILURE","",""],[17,"LIBSSH2_ERROR_ALLOC","",""],[17,"LIBSSH2_ERROR_SOCKET_SEND","",""],[17,"LIBSSH2_ERROR_KEY_EXCHANGE_FAILURE","",""],[17,"LIBSSH2_ERROR_TIMEOUT","",""],[17,"LIBSSH2_ERROR_HOSTKEY_INIT","",""],[17,"LIBSSH2_ERROR_HOSTKEY_SIGN","",""],[17,"LIBSSH2_ERROR_DECRYPT","",""],[17,"LIBSSH2_ERROR_SOCKET_DISCONNECT","",""],[17,"LIBSSH2_ERROR_PROTO","",""],[17,"LIBSSH2_ERROR_PASSWORD_EXPIRED","",""],[17,"LIBSSH2_ERROR_FILE","",""],[17,"LIBSSH2_ERROR_METHOD_NONE","",""],[17,"LIBSSH2_ERROR_AUTHENTICATION_FAILED","",""],[17,"LIBSSH2_ERROR_PUBLICKEY_UNRECOGNIZED","",""],[17,"LIBSSH2_ERROR_PUBLICKEY_UNVERIFIED","",""],[17,"LIBSSH2_ERROR_CHANNEL_OUTOFORDER","",""],[17,"LIBSSH2_ERROR_CHANNEL_FAILURE","",""],[17,"LIBSSH2_ERROR_CHANNEL_REQUEST_DENIED","",""],[17,"LIBSSH2_ERROR_CHANNEL_UNKNOWN","",""],[17,"LIBSSH2_ERROR_CHANNEL_WINDOW_EXCEEDED","",""],[17,"LIBSSH2_ERROR_CHANNEL_PACKET_EXCEEDED","",""],[17,"LIBSSH2_ERROR_CHANNEL_CLOSED","",""],[17,"LIBSSH2_ERROR_CHANNEL_EOF_SENT","",""],[17,"LIBSSH2_ERROR_SCP_PROTOCOL","",""],[17,"LIBSSH2_ERROR_ZLIB","",""],[17,"LIBSSH2_ERROR_SOCKET_TIMEOUT","",""],[17,"LIBSSH2_ERROR_SFTP_PROTOCOL","",""],[17,"LIBSSH2_ERROR_REQUEST_DENIED","",""],[17,"LIBSSH2_ERROR_METHOD_NOT_SUPPORTED","",""],[17,"LIBSSH2_ERROR_INVAL","",""],[17,"LIBSSH2_ERROR_INVALID_POLL_TYPE","",""],[17,"LIBSSH2_ERROR_PUBLICKEY_PROTOCOL","",""],[17,"LIBSSH2_ERROR_EAGAIN","",""],[17,"LIBSSH2_ERROR_BUFFER_TOO_SMALL","",""],[17,"LIBSSH2_ERROR_BAD_USE","",""],[17,"LIBSSH2_ERROR_COMPRESS","",""],[17,"LIBSSH2_ERROR_OUT_OF_BOUNDARY","",""],[17,"LIBSSH2_ERROR_AGENT_PROTOCOL","",""],[17,"LIBSSH2_ERROR_SOCKET_RECV","",""],[17,"LIBSSH2_ERROR_ENCRYPT","",""],[17,"LIBSSH2_ERROR_BAD_SOCKET","",""],[17,"LIBSSH2_ERROR_KNOWN_HOSTS","",""],[17,"LIBSSH2_HOSTKEY_HASH_MD5","",""],[17,"LIBSSH2_HOSTKEY_HASH_SHA1","",""],[17,"LIBSSH2_KNOWNHOST_FILE_OPENSSH","",""],[17,"LIBSSH2_KNOWNHOST_CHECK_MATCH","",""],[17,"LIBSSH2_KNOWNHOST_CHECK_MISMATCH","",""],[17,"LIBSSH2_KNOWNHOST_CHECK_NOTFOUND","",""],[17,"LIBSSH2_KNOWNHOST_CHECK_FAILURE","",""],[17,"LIBSSH2_KNOWNHOST_TYPE_PLAIN","",""],[17,"LIBSSH2_KNOWNHOST_TYPE_SHA1","",""],[17,"LIBSSH2_KNOWNHOST_TYPE_CUSTOM","",""],[17,"LIBSSH2_KNOWNHOST_KEYENC_RAW","",""],[17,"LIBSSH2_KNOWNHOST_KEYENC_BASE64","",""],[17,"LIBSSH2_KNOWNHOST_KEY_RSA1","",""],[17,"LIBSSH2_KNOWNHOST_KEY_SSHRSA","",""],[17,"LIBSSH2_KNOWNHOST_KEY_SSHDSS","",""],[17,"LIBSSH2_KNOWNHOST_KEY_UNKNOWN","",""],[17,"LIBSSH2_FXF_READ","",""],[17,"LIBSSH2_FXF_WRITE","",""],[17,"LIBSSH2_FXF_APPEND","",""],[17,"LIBSSH2_FXF_CREAT","",""],[17,"LIBSSH2_FXF_TRUNC","",""],[17,"LIBSSH2_FXF_EXCL","",""],[17,"LIBSSH2_SFTP_OPENFILE","",""],[17,"LIBSSH2_SFTP_OPENDIR","",""],[17,"LIBSSH2_SFTP_ATTR_SIZE","",""],[17,"LIBSSH2_SFTP_ATTR_UIDGID","",""],[17,"LIBSSH2_SFTP_ATTR_PERMISSIONS","",""],[17,"LIBSSH2_SFTP_ATTR_ACMODTIME","",""],[17,"LIBSSH2_SFTP_ATTR_EXTENDED","",""],[17,"LIBSSH2_SFTP_STAT","",""],[17,"LIBSSH2_SFTP_LSTAT","",""],[17,"LIBSSH2_SFTP_SETSTAT","",""],[17,"LIBSSH2_SFTP_SYMLINK","",""],[17,"LIBSSH2_SFTP_READLINK","",""],[17,"LIBSSH2_SFTP_REALPATH","",""],[17,"LIBSSH2_SFTP_RENAME_OVERWRITE","",""],[17,"LIBSSH2_SFTP_RENAME_ATOMIC","",""],[17,"LIBSSH2_SFTP_RENAME_NATIVE","",""]],"paths":[[3,"libssh2_agent_publickey"],[3,"libssh2_knownhost"],[3,"LIBSSH2_SFTP_ATTRIBUTES"],[3,"LIBSSH2_SFTP_STATVFS"]]};

searchIndex['openssl-sys'] = {"items":[[0,"","openssl-sys",""],[3,"EVP_MD_CTX","",""],[3,"HMAC_CTX","",""],[3,"X509V3_CTX","",""],[3,"BIGNUM","",""],[12,"d","","",0],[12,"top","","",0],[12,"dmax","","",0],[12,"neg","","",0],[12,"flags","","",0],[5,"init","",""],[5,"BIO_eof","",""],[5,"ASN1_INTEGER_set","",""],[5,"ASN1_STRING_type_new","",""],[5,"ASN1_TIME_free","",""],[5,"BIO_ctrl","",""],[5,"BIO_free_all","",""],[5,"BIO_new","",""],[5,"BIO_read","",""],[5,"BIO_write","",""],[5,"BIO_s_mem","",""],[5,"BN_new","",""],[5,"BN_dup","",""],[5,"BN_clear_free","",""],[5,"BN_CTX_new","",""],[5,"BN_CTX_free","",""],[5,"BN_num_bits","",""],[5,"BN_set_negative","",""],[5,"BN_set_word","",""],[5,"BN_add","",""],[5,"BN_div","",""],[5,"BN_exp","",""],[5,"BN_gcd","",""],[5,"BN_mod_add","",""],[5,"BN_mod_exp","",""],[5,"BN_mod_inverse","",""],[5,"BN_mod_mul","",""],[5,"BN_mod_sqr","",""],[5,"BN_mod_sub","",""],[5,"BN_mul","",""],[5,"BN_nnmod","",""],[5,"BN_add_word","",""],[5,"BN_sub_word","",""],[5,"BN_mul_word","",""],[5,"BN_div_word","",""],[5,"BN_mod_word","",""],[5,"BN_sqr","",""],[5,"BN_sub","",""],[5,"BN_clear_bit","",""],[5,"BN_is_bit_set","",""],[5,"BN_lshift","",""],[5,"BN_lshift1","",""],[5,"BN_mask_bits","",""],[5,"BN_rshift","",""],[5,"BN_set_bit","",""],[5,"BN_rshift1","",""],[5,"BN_cmp","",""],[5,"BN_ucmp","",""],[5,"BN_generate_prime_ex","",""],[5,"BN_is_prime_ex","",""],[5,"BN_is_prime_fasttest_ex","",""],[5,"BN_rand","",""],[5,"BN_pseudo_rand","",""],[5,"BN_rand_range","",""],[5,"BN_pseudo_rand_range","",""],[5,"BN_bin2bn","",""],[5,"BN_bn2bin","",""],[5,"BN_dec2bn","",""],[5,"BN_bn2dec","",""],[5,"BN_hex2bn","",""],[5,"BN_bn2hex","",""],[5,"CRYPTO_num_locks","",""],[5,"CRYPTO_set_locking_callback","",""],[5,"CRYPTO_free","",""],[5,"CRYPTO_memcmp","",""],[5,"ERR_get_error","",""],[5,"ERR_lib_error_string","",""],[5,"ERR_func_error_string","",""],[5,"ERR_reason_error_string","",""],[5,"ERR_load_crypto_strings","",""],[5,"EVP_md5","",""],[5,"EVP_ripemd160","",""],[5,"EVP_sha1","",""],[5,"EVP_sha224","",""],[5,"EVP_sha256","",""],[5,"EVP_sha384","",""],[5,"EVP_sha512","",""],[5,"EVP_aes_128_cbc","",""],[5,"EVP_aes_128_ecb","",""],[5,"EVP_aes_256_cbc","",""],[5,"EVP_aes_256_ecb","",""],[5,"EVP_rc4","",""],[5,"EVP_CIPHER_CTX_new","",""],[5,"EVP_CIPHER_CTX_set_padding","",""],[5,"EVP_CIPHER_CTX_free","",""],[5,"EVP_CipherInit","",""],[5,"EVP_CipherUpdate","",""],[5,"EVP_CipherFinal","",""],[5,"EVP_DigestInit","",""],[5,"EVP_DigestInit_ex","",""],[5,"EVP_DigestUpdate","",""],[5,"EVP_DigestFinal","",""],[5,"EVP_DigestFinal_ex","",""],[5,"EVP_MD_CTX_create","",""],[5,"EVP_MD_CTX_copy_ex","",""],[5,"EVP_MD_CTX_destroy","",""],[5,"EVP_PKEY_new","",""],[5,"EVP_PKEY_free","",""],[5,"EVP_PKEY_assign","",""],[5,"EVP_PKEY_get1_RSA","",""],[5,"EVP_PKEY_set1_RSA","",""],[5,"HMAC_CTX_init","",""],[5,"HMAC_CTX_cleanup","",""],[5,"HMAC_CTX_copy","",""],[5,"HMAC_Init_ex_shim","",""],[5,"HMAC_Final_shim","",""],[5,"HMAC_Update_shim","",""],[5,"PEM_read_bio_X509","",""],[5,"PEM_write_bio_PrivateKey","",""],[5,"PEM_write_bio_X509","",""],[5,"PKCS5_PBKDF2_HMAC_SHA1","",""],[5,"RAND_bytes","",""],[5,"RSA_generate_key","",""],[5,"RSA_private_decrypt","",""],[5,"RSA_public_encrypt","",""],[5,"RSA_sign","",""],[5,"RSA_size","",""],[5,"RSA_verify","",""],[5,"SSL_library_init","",""],[5,"SSL_load_error_strings","",""],[5,"SSLv3_method","",""],[5,"TLSv1_method","",""],[5,"SSLv23_method","",""],[5,"SSL_new","",""],[5,"SSL_free","",""],[5,"SSL_set_bio","",""],[5,"SSL_get_rbio","",""],[5,"SSL_get_wbio","",""],[5,"SSL_accept","",""],[5,"SSL_connect","",""],[5,"SSL_ctrl","",""],[5,"SSL_get_error","",""],[5,"SSL_read","",""],[5,"SSL_write","",""],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","",""],[5,"SSL_get_SSL_CTX","",""],[5,"SSL_get_current_compression","",""],[5,"SSL_get_peer_certificate","",""],[5,"SSL_COMP_get_name","",""],[5,"SSL_CTX_new","",""],[5,"SSL_CTX_free","",""],[5,"SSL_CTX_set_verify","",""],[5,"SSL_CTX_set_verify_depth","",""],[5,"SSL_CTX_load_verify_locations","",""],[5,"SSL_CTX_get_ex_new_index","",""],[5,"SSL_CTX_set_ex_data","",""],[5,"SSL_CTX_get_ex_data","",""],[5,"SSL_CTX_use_certificate_file","",""],[5,"SSL_CTX_use_PrivateKey_file","",""],[5,"SSL_CTX_set_cipher_list","",""],[5,"X509_add_ext","",""],[5,"X509_digest","",""],[5,"X509_free","",""],[5,"X509_get_serialNumber","",""],[5,"X509_get_subject_name","",""],[5,"X509_gmtime_adj","",""],[5,"X509_new","",""],[5,"X509_set_issuer_name","",""],[5,"X509_set_notAfter","",""],[5,"X509_set_notBefore","",""],[5,"X509_set_version","",""],[5,"X509_set_pubkey","",""],[5,"X509_sign","",""],[5,"X509_EXTENSION_free","",""],[5,"X509_NAME_add_entry_by_txt","",""],[5,"X509_NAME_get_index_by_NID","",""],[5,"X509_NAME_get_entry","",""],[5,"X509_NAME_ENTRY_get_data","",""],[5,"ASN1_STRING_to_UTF8","",""],[5,"X509_STORE_CTX_get_current_cert","",""],[5,"X509_STORE_CTX_get_error","",""],[5,"X509_STORE_CTX_get_ex_data","",""],[5,"X509V3_EXT_conf_nid","",""],[5,"X509V3_set_ctx","",""],[5,"i2d_RSA_PUBKEY","",""],[5,"d2i_RSA_PUBKEY","",""],[5,"i2d_RSAPrivateKey","",""],[5,"d2i_RSAPrivateKey","",""],[0,"probe","",""],[3,"ProbeResult","openssl-sys::probe",""],[12,"cert_file","","",1],[12,"cert_dir","","",1],[5,"find_certs_dirs","","Probe the system for the directory in which CA certificates should likely be\nfound."],[5,"init_ssl_cert_env_vars","",""],[5,"probe","",""],[6,"ASN1_INTEGER","openssl-sys",""],[6,"ASN1_STRING","",""],[6,"ASN1_TIME","",""],[6,"BIO","",""],[6,"BIO_METHOD","",""],[6,"BN_CTX","",""],[6,"COMP_METHOD","",""],[6,"CRYPTO_EX_DATA","",""],[6,"ENGINE","",""],[6,"EVP_CIPHER","",""],[6,"EVP_CIPHER_CTX","",""],[6,"EVP_MD","",""],[6,"EVP_PKEY","",""],[6,"EVP_PKEY_CTX","",""],[6,"RSA","",""],[6,"SSL","",""],[6,"SSL_CTX","",""],[6,"SSL_METHOD","",""],[6,"X509","",""],[6,"X509_CRL","",""],[6,"X509_EXTENSION","",""],[6,"X509_NAME","",""],[6,"X509_NAME_ENTRY","",""],[6,"X509_REQ","",""],[6,"X509_STORE_CTX","",""],[6,"CRYPTO_EX_new","",""],[6,"CRYPTO_EX_dup","",""],[6,"CRYPTO_EX_free","",""],[6,"PasswordCallback","",""],[17,"BIO_CTRL_EOF","",""],[17,"CRYPTO_LOCK","",""],[17,"MBSTRING_ASC","",""],[17,"MBSTRING_BMP","",""],[17,"MBSTRING_FLAG","",""],[17,"MBSTRING_UNIV","",""],[17,"MBSTRING_UTF8","",""],[17,"NID_ext_key_usage","",""],[17,"NID_key_usage","",""],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","",""],[17,"SSL_ERROR_NONE","",""],[17,"SSL_ERROR_SSL","",""],[17,"SSL_ERROR_SYSCALL","",""],[17,"SSL_ERROR_WANT_ACCEPT","",""],[17,"SSL_ERROR_WANT_CONNECT","",""],[17,"SSL_ERROR_WANT_READ","",""],[17,"SSL_ERROR_WANT_WRITE","",""],[17,"SSL_ERROR_WANT_X509_LOOKUP","",""],[17,"SSL_ERROR_ZERO_RETURN","",""],[17,"SSL_VERIFY_NONE","",""],[17,"SSL_VERIFY_PEER","",""],[17,"TLSEXT_NAMETYPE_host_name","",""],[17,"V_ASN1_GENERALIZEDTIME","",""],[17,"V_ASN1_UTCTIME","",""],[17,"X509_FILETYPE_ASN1","",""],[17,"X509_FILETYPE_DEFAULT","",""],[17,"X509_FILETYPE_PEM","",""],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","",""],[17,"X509_V_ERR_AKID_SKID_MISMATCH","",""],[17,"X509_V_ERR_APPLICATION_VERIFICATION","",""],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","",""],[17,"X509_V_ERR_CERT_HAS_EXPIRED","",""],[17,"X509_V_ERR_CERT_NOT_YET_VALID","",""],[17,"X509_V_ERR_CERT_REJECTED","",""],[17,"X509_V_ERR_CERT_REVOKED","",""],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","",""],[17,"X509_V_ERR_CERT_UNTRUSTED","",""],[17,"X509_V_ERR_CRL_HAS_EXPIRED","",""],[17,"X509_V_ERR_CRL_NOT_YET_VALID","",""],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","",""],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","",""],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","",""],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","",""],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","",""],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","",""],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","",""],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","",""],[17,"X509_V_ERR_EXCLUDED_VIOLATION","",""],[17,"X509_V_ERR_INVALID_CA","",""],[17,"X509_V_ERR_INVALID_EXTENSION","",""],[17,"X509_V_ERR_INVALID_NON_CA","",""],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","",""],[17,"X509_V_ERR_INVALID_PURPOSE","",""],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","",""],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","",""],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","",""],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","",""],[17,"X509_V_ERR_OUT_OF_MEM","",""],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","",""],[17,"X509_V_ERR_PERMITTED_VIOLATION","",""],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","",""],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","",""],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","",""],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","",""],[17,"X509_V_ERR_SUBTREE_MINMAX","",""],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","",""],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","",""],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","",""],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","",""],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","",""],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","",""],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","",""],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","",""],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","",""],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","",""],[17,"X509_V_ERR_UNNESTED_RESOURCE","",""],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","",""],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","",""],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","",""],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","",""],[17,"X509_V_OK","",""]],"paths":[[3,"BIGNUM"],[3,"ProbeResult"]]};

searchIndex['libz-sys'] = {"items":[],"paths":[]};

searchIndex['pkg-config'] = {"items":[[0,"","pkg-config","A build dependency for Cargo libraries to find system artifacts through the\n`pkg-config` utility."],[3,"Config","",""],[3,"Library","",""],[12,"libs","","",0],[12,"link_paths","","",0],[12,"frameworks","","",0],[12,"framework_paths","","",0],[12,"include_paths","","",0],[5,"target_supported","",""],[5,"find_library","","Simple shortcut for using all default options for finding a library."],[11,"clone","","",1],[11,"fmt","","",0],[11,"new","","Creates a new set of configuration options which are all initially set\nto \"blank\".",1],[11,"statik","","Indicate whether the `--static` flag should be passed.",1],[11,"atleast_version","","Indicate that the library must be at least version `vers`.",1],[11,"find","","Run `pkg-config` to find the library `name`.",1]],"paths":[[3,"Library"],[3,"Config"]]};

searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries"],[0,"types","",""],[0,"common","libc::types",""],[0,"c95","libc::types::common",""],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C."],[13,"__variant1","","",0],[13,"__variant2","","",0],[4,"FILE","",""],[4,"fpos_t","",""],[0,"c99","libc::types::common",""],[6,"int8_t","libc::types::common::c99",""],[6,"int16_t","",""],[6,"int32_t","",""],[6,"int64_t","",""],[6,"uint8_t","",""],[6,"uint16_t","",""],[6,"uint32_t","",""],[6,"uint64_t","",""],[0,"posix88","libc::types::common",""],[4,"DIR","libc::types::common::posix88",""],[4,"dirent_t","",""],[0,"os","libc::types",""],[0,"common","libc::types::os",""],[0,"posix01","libc::types::os::common",""],[3,"glob_t","libc::types::os::common::posix01",""],[12,"gl_pathc","","",1],[12,"gl_pathv","","",1],[12,"gl_offs","","",1],[12,"__unused1","","",1],[12,"__unused2","","",1],[12,"__unused3","","",1],[12,"__unused4","","",1],[12,"__unused5","","",1],[3,"timeval","",""],[12,"tv_sec","","",2],[12,"tv_usec","","",2],[3,"timespec","",""],[12,"tv_sec","","",3],[12,"tv_nsec","","",3],[4,"timezone","",""],[6,"pthread_t","",""],[6,"sighandler_t","",""],[0,"bsd44","libc::types::os::common",""],[3,"sockaddr","libc::types::os::common::bsd44",""],[12,"sa_family","","",4],[12,"sa_data","","",4],[3,"sockaddr_storage","",""],[12,"ss_family","","",5],[12,"__ss_align","","",5],[12,"__ss_pad2","","",5],[3,"sockaddr_in","",""],[12,"sin_family","","",6],[12,"sin_port","","",6],[12,"sin_addr","","",6],[12,"sin_zero","","",6],[3,"in_addr","",""],[12,"s_addr","","",7],[3,"sockaddr_in6","",""],[12,"sin6_family","","",8],[12,"sin6_port","","",8],[12,"sin6_flowinfo","","",8],[12,"sin6_addr","","",8],[12,"sin6_scope_id","","",8],[3,"in6_addr","",""],[12,"s6_addr","","",9],[3,"ip_mreq","",""],[12,"imr_multiaddr","","",10],[12,"imr_interface","","",10],[3,"ip6_mreq","",""],[12,"ipv6mr_multiaddr","","",11],[12,"ipv6mr_interface","","",11],[3,"addrinfo","",""],[12,"ai_flags","","",12],[12,"ai_family","","",12],[12,"ai_socktype","","",12],[12,"ai_protocol","","",12],[12,"ai_addrlen","","",12],[12,"ai_addr","","",12],[12,"ai_canonname","","",12],[12,"ai_next","","",12],[3,"sockaddr_un","",""],[12,"sun_family","","",13],[12,"sun_path","","",13],[3,"ifaddrs","",""],[12,"ifa_next","","",14],[12,"ifa_name","","",14],[12,"ifa_flags","","",14],[12,"ifa_addr","","",14],[12,"ifa_netmask","","",14],[12,"ifa_ifu","","",14],[12,"ifa_data","","",14],[6,"socklen_t","",""],[6,"sa_family_t","",""],[6,"in_port_t","",""],[6,"in_addr_t","",""],[0,"arch","libc::types::os",""],[0,"c95","libc::types::os::arch",""],[6,"c_char","libc::types::os::arch::c95",""],[6,"c_schar","",""],[6,"c_uchar","",""],[6,"c_short","",""],[6,"c_ushort","",""],[6,"c_int","",""],[6,"c_uint","",""],[6,"c_long","",""],[6,"c_ulong","",""],[6,"c_float","",""],[6,"c_double","",""],[6,"size_t","",""],[6,"ptrdiff_t","",""],[6,"clock_t","",""],[6,"time_t","",""],[6,"suseconds_t","",""],[6,"wchar_t","",""],[0,"c99","libc::types::os::arch",""],[6,"c_longlong","libc::types::os::arch::c99",""],[6,"c_ulonglong","",""],[6,"intptr_t","",""],[6,"uintptr_t","",""],[6,"intmax_t","",""],[6,"uintmax_t","",""],[0,"posix88","libc::types::os::arch",""],[6,"off_t","libc::types::os::arch::posix88",""],[6,"dev_t","",""],[6,"ino_t","",""],[6,"pid_t","",""],[6,"uid_t","",""],[6,"gid_t","",""],[6,"useconds_t","",""],[6,"mode_t","",""],[6,"ssize_t","",""],[0,"posix01","libc::types::os::arch",""],[3,"stat","libc::types::os::arch::posix01",""],[12,"st_dev","","",15],[12,"st_ino","","",15],[12,"st_nlink","","",15],[12,"st_mode","","",15],[12,"st_uid","","",15],[12,"st_gid","","",15],[12,"__pad0","","",15],[12,"st_rdev","","",15],[12,"st_size","","",15],[12,"st_blksize","","",15],[12,"st_blocks","","",15],[12,"st_atime","","",15],[12,"st_atime_nsec","","",15],[12,"st_mtime","","",15],[12,"st_mtime_nsec","","",15],[12,"st_ctime","","",15],[12,"st_ctime_nsec","","",15],[12,"__unused","","",15],[3,"utimbuf","",""],[12,"actime","","",16],[12,"modtime","","",16],[3,"pthread_attr_t","",""],[12,"__size","","",17],[6,"nlink_t","",""],[6,"blksize_t","",""],[6,"blkcnt_t","",""],[0,"extra","libc::types::os::arch",""],[3,"sockaddr_ll","libc::types::os::arch::extra",""],[12,"sll_family","","",18],[12,"sll_protocol","","",18],[12,"sll_ifindex","","",18],[12,"sll_hatype","","",18],[12,"sll_pkttype","","",18],[12,"sll_halen","","",18],[12,"sll_addr","","",18],[0,"consts","libc",""],[0,"os","libc::consts",""],[0,"c95","libc::consts::os",""],[17,"EXIT_FAILURE","libc::consts::os::c95",""],[17,"EXIT_SUCCESS","",""],[17,"RAND_MAX","",""],[17,"EOF","",""],[17,"SEEK_SET","",""],[17,"SEEK_CUR","",""],[17,"SEEK_END","",""],[17,"_IOFBF","",""],[17,"_IONBF","",""],[17,"_IOLBF","",""],[17,"BUFSIZ","",""],[17,"FOPEN_MAX","",""],[17,"FILENAME_MAX","",""],[17,"L_tmpnam","",""],[17,"TMP_MAX","",""],[0,"posix88","libc::consts::os",""],[17,"O_RDONLY","libc::consts::os::posix88",""],[17,"O_WRONLY","",""],[17,"O_RDWR","",""],[17,"O_APPEND","",""],[17,"O_CREAT","",""],[17,"O_EXCL","",""],[17,"O_TRUNC","",""],[17,"S_IFIFO","",""],[17,"S_IFCHR","",""],[17,"S_IFBLK","",""],[17,"S_IFDIR","",""],[17,"S_IFREG","",""],[17,"S_IFLNK","",""],[17,"S_IFMT","",""],[17,"S_IEXEC","",""],[17,"S_IWRITE","",""],[17,"S_IREAD","",""],[17,"S_IRWXU","",""],[17,"S_IXUSR","",""],[17,"S_IWUSR","",""],[17,"S_IRUSR","",""],[17,"F_OK","",""],[17,"R_OK","",""],[17,"W_OK","",""],[17,"X_OK","",""],[17,"STDIN_FILENO","",""],[17,"STDOUT_FILENO","",""],[17,"STDERR_FILENO","",""],[17,"F_LOCK","",""],[17,"F_TEST","",""],[17,"F_TLOCK","",""],[17,"F_ULOCK","",""],[17,"SIGHUP","",""],[17,"SIGINT","",""],[17,"SIGQUIT","",""],[17,"SIGILL","",""],[17,"SIGABRT","",""],[17,"SIGFPE","",""],[17,"SIGKILL","",""],[17,"SIGSEGV","",""],[17,"SIGPIPE","",""],[17,"SIGALRM","",""],[17,"SIGTERM","",""],[17,"PROT_NONE","",""],[17,"PROT_READ","",""],[17,"PROT_WRITE","",""],[17,"PROT_EXEC","",""],[17,"MAP_FILE","",""],[17,"MAP_SHARED","",""],[17,"MAP_PRIVATE","",""],[17,"MAP_FIXED","",""],[17,"MAP_ANON","",""],[17,"MAP_FAILED","",""],[17,"MCL_CURRENT","",""],[17,"MCL_FUTURE","",""],[17,"MS_ASYNC","",""],[17,"MS_INVALIDATE","",""],[17,"MS_SYNC","",""],[17,"EPERM","",""],[17,"ENOENT","",""],[17,"ESRCH","",""],[17,"EINTR","",""],[17,"EIO","",""],[17,"ENXIO","",""],[17,"E2BIG","",""],[17,"ENOEXEC","",""],[17,"EBADF","",""],[17,"ECHILD","",""],[17,"EAGAIN","",""],[17,"ENOMEM","",""],[17,"EACCES","",""],[17,"EFAULT","",""],[17,"ENOTBLK","",""],[17,"EBUSY","",""],[17,"EEXIST","",""],[17,"EXDEV","",""],[17,"ENODEV","",""],[17,"ENOTDIR","",""],[17,"EISDIR","",""],[17,"EINVAL","",""],[17,"ENFILE","",""],[17,"EMFILE","",""],[17,"ENOTTY","",""],[17,"ETXTBSY","",""],[17,"EFBIG","",""],[17,"ENOSPC","",""],[17,"ESPIPE","",""],[17,"EROFS","",""],[17,"EMLINK","",""],[17,"EPIPE","",""],[17,"EDOM","",""],[17,"ERANGE","",""],[17,"EDEADLK","",""],[17,"ENAMETOOLONG","",""],[17,"ENOLCK","",""],[17,"ENOSYS","",""],[17,"ENOTEMPTY","",""],[17,"ELOOP","",""],[17,"EWOULDBLOCK","",""],[17,"ENOMSG","",""],[17,"EIDRM","",""],[17,"ECHRNG","",""],[17,"EL2NSYNC","",""],[17,"EL3HLT","",""],[17,"EL3RST","",""],[17,"ELNRNG","",""],[17,"EUNATCH","",""],[17,"ENOCSI","",""],[17,"EL2HLT","",""],[17,"EBADE","",""],[17,"EBADR","",""],[17,"EXFULL","",""],[17,"ENOANO","",""],[17,"EBADRQC","",""],[17,"EBADSLT","",""],[17,"EDEADLOCK","",""],[17,"EBFONT","",""],[17,"ENOSTR","",""],[17,"ENODATA","",""],[17,"ETIME","",""],[17,"ENOSR","",""],[17,"ENONET","",""],[17,"ENOPKG","",""],[17,"EREMOTE","",""],[17,"ENOLINK","",""],[17,"EADV","",""],[17,"ESRMNT","",""],[17,"ECOMM","",""],[17,"EPROTO","",""],[17,"EMULTIHOP","",""],[17,"EDOTDOT","",""],[17,"EBADMSG","",""],[17,"EOVERFLOW","",""],[17,"ENOTUNIQ","",""],[17,"EBADFD","",""],[17,"EREMCHG","",""],[17,"ELIBACC","",""],[17,"ELIBBAD","",""],[17,"ELIBSCN","",""],[17,"ELIBMAX","",""],[17,"ELIBEXEC","",""],[17,"EILSEQ","",""],[17,"ERESTART","",""],[17,"ESTRPIPE","",""],[17,"EUSERS","",""],[17,"ENOTSOCK","",""],[17,"EDESTADDRREQ","",""],[17,"EMSGSIZE","",""],[17,"EPROTOTYPE","",""],[17,"ENOPROTOOPT","",""],[17,"EPROTONOSUPPORT","",""],[17,"ESOCKTNOSUPPORT","",""],[17,"EOPNOTSUPP","",""],[17,"EPFNOSUPPORT","",""],[17,"EAFNOSUPPORT","",""],[17,"EADDRINUSE","",""],[17,"EADDRNOTAVAIL","",""],[17,"ENETDOWN","",""],[17,"ENETUNREACH","",""],[17,"ENETRESET","",""],[17,"ECONNABORTED","",""],[17,"ECONNRESET","",""],[17,"ENOBUFS","",""],[17,"EISCONN","",""],[17,"ENOTCONN","",""],[17,"ESHUTDOWN","",""],[17,"ETOOMANYREFS","",""],[17,"ETIMEDOUT","",""],[17,"ECONNREFUSED","",""],[17,"EHOSTDOWN","",""],[17,"EHOSTUNREACH","",""],[17,"EALREADY","",""],[17,"EINPROGRESS","",""],[17,"ESTALE","",""],[17,"EUCLEAN","",""],[17,"ENOTNAM","",""],[17,"ENAVAIL","",""],[17,"EISNAM","",""],[17,"EREMOTEIO","",""],[17,"EDQUOT","",""],[17,"ENOMEDIUM","",""],[17,"EMEDIUMTYPE","",""],[17,"ECANCELED","",""],[17,"ENOKEY","",""],[17,"EKEYEXPIRED","",""],[17,"EKEYREVOKED","",""],[17,"EKEYREJECTED","",""],[17,"EOWNERDEAD","",""],[17,"ENOTRECOVERABLE","",""],[17,"ERFKILL","",""],[17,"EHWPOISON","",""],[0,"posix01","libc::consts::os",""],[17,"F_DUPFD","libc::consts::os::posix01",""],[17,"F_GETFD","",""],[17,"F_SETFD","",""],[17,"F_GETFL","",""],[17,"F_SETFL","",""],[17,"SIGTRAP","",""],[17,"SIGPIPE","",""],[17,"SIG_IGN","",""],[17,"GLOB_ERR","",""],[17,"GLOB_MARK","",""],[17,"GLOB_NOSORT","",""],[17,"GLOB_DOOFFS","",""],[17,"GLOB_NOCHECK","",""],[17,"GLOB_APPEND","",""],[17,"GLOB_NOESCAPE","",""],[17,"GLOB_NOSPACE","",""],[17,"GLOB_ABORTED","",""],[17,"GLOB_NOMATCH","",""],[17,"POSIX_MADV_NORMAL","",""],[17,"POSIX_MADV_RANDOM","",""],[17,"POSIX_MADV_SEQUENTIAL","",""],[17,"POSIX_MADV_WILLNEED","",""],[17,"POSIX_MADV_DONTNEED","",""],[17,"_SC_MQ_PRIO_MAX","",""],[17,"_SC_IOV_MAX","",""],[17,"_SC_GETGR_R_SIZE_MAX","",""],[17,"_SC_GETPW_R_SIZE_MAX","",""],[17,"_SC_LOGIN_NAME_MAX","",""],[17,"_SC_TTY_NAME_MAX","",""],[17,"_SC_THREADS","",""],[17,"_SC_THREAD_SAFE_FUNCTIONS","",""],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","",""],[17,"_SC_THREAD_KEYS_MAX","",""],[17,"_SC_THREAD_STACK_MIN","",""],[17,"_SC_THREAD_THREADS_MAX","",""],[17,"_SC_THREAD_ATTR_STACKADDR","",""],[17,"_SC_THREAD_ATTR_STACKSIZE","",""],[17,"_SC_THREAD_PRIORITY_SCHEDULING","",""],[17,"_SC_THREAD_PRIO_INHERIT","",""],[17,"_SC_THREAD_PRIO_PROTECT","",""],[17,"_SC_THREAD_PROCESS_SHARED","",""],[17,"_SC_ATEXIT_MAX","",""],[17,"_SC_XOPEN_VERSION","",""],[17,"_SC_XOPEN_XCU_VERSION","",""],[17,"_SC_XOPEN_UNIX","",""],[17,"_SC_XOPEN_CRYPT","",""],[17,"_SC_XOPEN_ENH_I18N","",""],[17,"_SC_XOPEN_SHM","",""],[17,"_SC_XOPEN_LEGACY","",""],[17,"_SC_XOPEN_REALTIME","",""],[17,"_SC_XOPEN_REALTIME_THREADS","",""],[17,"PTHREAD_CREATE_JOINABLE","",""],[17,"PTHREAD_CREATE_DETACHED","",""],[17,"PTHREAD_STACK_MIN","",""],[17,"CLOCK_REALTIME","",""],[17,"CLOCK_MONOTONIC","",""],[0,"bsd44","libc::consts::os",""],[17,"MADV_NORMAL","libc::consts::os::bsd44",""],[17,"MADV_RANDOM","",""],[17,"MADV_SEQUENTIAL","",""],[17,"MADV_WILLNEED","",""],[17,"MADV_DONTNEED","",""],[17,"MADV_REMOVE","",""],[17,"MADV_DONTFORK","",""],[17,"MADV_DOFORK","",""],[17,"MADV_MERGEABLE","",""],[17,"MADV_UNMERGEABLE","",""],[17,"MADV_HWPOISON","",""],[17,"IFF_LOOPBACK","",""],[17,"AF_UNIX","",""],[17,"AF_INET","",""],[17,"AF_INET6","",""],[17,"SOCK_STREAM","",""],[17,"SOCK_DGRAM","",""],[17,"SOCK_RAW","",""],[17,"IPPROTO_TCP","",""],[17,"IPPROTO_IP","",""],[17,"IPPROTO_IPV6","",""],[17,"IP_MULTICAST_TTL","",""],[17,"IP_MULTICAST_LOOP","",""],[17,"IP_TTL","",""],[17,"IP_HDRINCL","",""],[17,"IP_ADD_MEMBERSHIP","",""],[17,"IP_DROP_MEMBERSHIP","",""],[17,"IPV6_ADD_MEMBERSHIP","",""],[17,"IPV6_DROP_MEMBERSHIP","",""],[17,"TCP_NODELAY","",""],[17,"SOL_SOCKET","",""],[17,"SO_KEEPALIVE","",""],[17,"SO_BROADCAST","",""],[17,"SO_REUSEADDR","",""],[17,"SO_ERROR","",""],[17,"SHUT_RD","",""],[17,"SHUT_WR","",""],[17,"SHUT_RDWR","",""],[0,"extra","libc::consts::os",""],[17,"AF_PACKET","libc::consts::os::extra",""],[17,"IPPROTO_RAW","",""],[17,"O_RSYNC","",""],[17,"O_DSYNC","",""],[17,"O_NONBLOCK","",""],[17,"O_SYNC","",""],[17,"PROT_GROWSDOWN","",""],[17,"PROT_GROWSUP","",""],[17,"MAP_TYPE","",""],[17,"MAP_ANONYMOUS","",""],[17,"MAP_32BIT","",""],[17,"MAP_GROWSDOWN","",""],[17,"MAP_DENYWRITE","",""],[17,"MAP_EXECUTABLE","",""],[17,"MAP_LOCKED","",""],[17,"MAP_NONRESERVE","",""],[17,"MAP_POPULATE","",""],[17,"MAP_NONBLOCK","",""],[17,"MAP_STACK","",""],[0,"sysconf","libc::consts::os",""],[17,"_SC_ARG_MAX","libc::consts::os::sysconf",""],[17,"_SC_CHILD_MAX","",""],[17,"_SC_CLK_TCK","",""],[17,"_SC_NGROUPS_MAX","",""],[17,"_SC_OPEN_MAX","",""],[17,"_SC_STREAM_MAX","",""],[17,"_SC_TZNAME_MAX","",""],[17,"_SC_JOB_CONTROL","",""],[17,"_SC_SAVED_IDS","",""],[17,"_SC_REALTIME_SIGNALS","",""],[17,"_SC_PRIORITY_SCHEDULING","",""],[17,"_SC_TIMERS","",""],[17,"_SC_ASYNCHRONOUS_IO","",""],[17,"_SC_PRIORITIZED_IO","",""],[17,"_SC_SYNCHRONIZED_IO","",""],[17,"_SC_FSYNC","",""],[17,"_SC_MAPPED_FILES","",""],[17,"_SC_MEMLOCK","",""],[17,"_SC_MEMLOCK_RANGE","",""],[17,"_SC_MEMORY_PROTECTION","",""],[17,"_SC_MESSAGE_PASSING","",""],[17,"_SC_SEMAPHORES","",""],[17,"_SC_SHARED_MEMORY_OBJECTS","",""],[17,"_SC_AIO_LISTIO_MAX","",""],[17,"_SC_AIO_MAX","",""],[17,"_SC_AIO_PRIO_DELTA_MAX","",""],[17,"_SC_DELAYTIMER_MAX","",""],[17,"_SC_MQ_OPEN_MAX","",""],[17,"_SC_VERSION","",""],[17,"_SC_PAGESIZE","",""],[17,"_SC_RTSIG_MAX","",""],[17,"_SC_SEM_NSEMS_MAX","",""],[17,"_SC_SEM_VALUE_MAX","",""],[17,"_SC_SIGQUEUE_MAX","",""],[17,"_SC_TIMER_MAX","",""],[17,"_SC_BC_BASE_MAX","",""],[17,"_SC_BC_DIM_MAX","",""],[17,"_SC_BC_SCALE_MAX","",""],[17,"_SC_BC_STRING_MAX","",""],[17,"_SC_COLL_WEIGHTS_MAX","",""],[17,"_SC_EXPR_NEST_MAX","",""],[17,"_SC_LINE_MAX","",""],[17,"_SC_RE_DUP_MAX","",""],[17,"_SC_2_VERSION","",""],[17,"_SC_2_C_BIND","",""],[17,"_SC_2_C_DEV","",""],[17,"_SC_2_FORT_DEV","",""],[17,"_SC_2_FORT_RUN","",""],[17,"_SC_2_SW_DEV","",""],[17,"_SC_2_LOCALEDEF","",""],[17,"_SC_2_CHAR_TERM","",""],[17,"_SC_2_C_VERSION","",""],[17,"_SC_2_UPE","",""],[17,"_SC_XBS5_ILP32_OFF32","",""],[17,"_SC_XBS5_ILP32_OFFBIG","",""],[17,"_SC_XBS5_LPBIG_OFFBIG","",""],[0,"funcs","libc",""],[0,"c95","libc::funcs",""],[0,"ctype","libc::funcs::c95",""],[5,"isalnum","libc::funcs::c95::ctype",""],[5,"isalpha","",""],[5,"iscntrl","",""],[5,"isdigit","",""],[5,"isgraph","",""],[5,"islower","",""],[5,"isprint","",""],[5,"ispunct","",""],[5,"isspace","",""],[5,"isupper","",""],[5,"isxdigit","",""],[5,"tolower","",""],[5,"toupper","",""],[0,"stdio","libc::funcs::c95",""],[5,"fopen","libc::funcs::c95::stdio",""],[5,"freopen","",""],[5,"fflush","",""],[5,"fclose","",""],[5,"remove","",""],[5,"rename","",""],[5,"tmpfile","",""],[5,"setvbuf","",""],[5,"setbuf","",""],[5,"fgetc","",""],[5,"fgets","",""],[5,"fputc","",""],[5,"fputs","",""],[5,"puts","",""],[5,"ungetc","",""],[5,"fread","",""],[5,"fwrite","",""],[5,"fseek","",""],[5,"ftell","",""],[5,"rewind","",""],[5,"fgetpos","",""],[5,"fsetpos","",""],[5,"feof","",""],[5,"ferror","",""],[5,"perror","",""],[0,"stdlib","libc::funcs::c95",""],[5,"abs","libc::funcs::c95::stdlib",""],[5,"labs","",""],[5,"atof","",""],[5,"atoi","",""],[5,"strtod","",""],[5,"strtol","",""],[5,"strtoul","",""],[5,"calloc","",""],[5,"malloc","",""],[5,"realloc","",""],[5,"free","",""],[5,"exit","","Exits the running program in a possibly dangerous manner."],[5,"_exit","",""],[5,"atexit","",""],[5,"system","",""],[5,"getenv","",""],[5,"rand","",""],[5,"srand","",""],[0,"string","libc::funcs::c95",""],[5,"strcpy","libc::funcs::c95::string",""],[5,"strncpy","",""],[5,"strcat","",""],[5,"strncat","",""],[5,"strcmp","",""],[5,"strncmp","",""],[5,"strcoll","",""],[5,"strchr","",""],[5,"strrchr","",""],[5,"strspn","",""],[5,"strcspn","",""],[5,"strpbrk","",""],[5,"strstr","",""],[5,"strlen","",""],[5,"strerror","",""],[5,"strtok","",""],[5,"strxfrm","",""],[5,"wcslen","",""],[5,"memcmp","",""],[5,"memchr","",""],[0,"posix88","libc::funcs",""],[0,"stat_","libc::funcs::posix88",""],[5,"chmod","libc::funcs::posix88::stat_",""],[5,"fchmod","",""],[5,"fstat","",""],[5,"mkdir","",""],[5,"mkfifo","",""],[5,"stat","",""],[0,"stdio","libc::funcs::posix88",""],[5,"popen","libc::funcs::posix88::stdio",""],[5,"pclose","",""],[5,"fdopen","",""],[5,"fileno","",""],[0,"fcntl","libc::funcs::posix88",""],[5,"open","libc::funcs::posix88::fcntl",""],[5,"creat","",""],[5,"fcntl","",""],[0,"dirent","libc::funcs::posix88",""],[5,"opendir","libc::funcs::posix88::dirent",""],[5,"readdir_r","",""],[5,"closedir","",""],[5,"rewinddir","",""],[5,"seekdir","",""],[5,"telldir","",""],[0,"unistd","libc::funcs::posix88",""],[5,"access","libc::funcs::posix88::unistd",""],[5,"alarm","",""],[5,"chdir","",""],[5,"chown","",""],[5,"close","",""],[5,"dup","",""],[5,"dup2","",""],[5,"execv","",""],[5,"execve","",""],[5,"execvp","",""],[5,"fork","",""],[5,"fpathconf","",""],[5,"getcwd","",""],[5,"getegid","",""],[5,"geteuid","",""],[5,"getgid","",""],[5,"getgroups","",""],[5,"getlogin","",""],[5,"getopt","",""],[5,"getpgrp","",""],[5,"getpid","",""],[5,"getppid","",""],[5,"getuid","",""],[5,"getsid","",""],[5,"isatty","",""],[5,"link","",""],[5,"lseek","",""],[5,"pathconf","",""],[5,"pause","",""],[5,"pipe","",""],[5,"read","",""],[5,"rmdir","",""],[5,"setgid","",""],[5,"setpgid","",""],[5,"setsid","",""],[5,"setuid","",""],[5,"sleep","",""],[5,"usleep","",""],[5,"nanosleep","",""],[5,"sysconf","",""],[5,"tcgetpgrp","",""],[5,"ttyname","",""],[5,"unlink","",""],[5,"write","",""],[5,"pread","",""],[5,"pwrite","",""],[5,"utime","",""],[17,"_PC_NAME_MAX","",""],[0,"signal","libc::funcs::posix88",""],[5,"kill","libc::funcs::posix88::signal",""],[0,"mman","libc::funcs::posix88",""],[5,"mlock","libc::funcs::posix88::mman",""],[5,"munlock","",""],[5,"mlockall","",""],[5,"munlockall","",""],[5,"mmap","",""],[5,"munmap","",""],[5,"mprotect","",""],[5,"msync","",""],[5,"shm_open","",""],[5,"shm_unlink","",""],[0,"net","libc::funcs::posix88",""],[5,"if_nametoindex","libc::funcs::posix88::net",""],[0,"posix01","libc::funcs",""],[0,"stat_","libc::funcs::posix01",""],[5,"lstat","libc::funcs::posix01::stat_",""],[0,"unistd","libc::funcs::posix01",""],[5,"readlink","libc::funcs::posix01::unistd",""],[5,"fsync","",""],[5,"fdatasync","",""],[5,"setenv","",""],[5,"unsetenv","",""],[5,"putenv","",""],[5,"symlink","",""],[5,"ftruncate","",""],[0,"signal","libc::funcs::posix01",""],[5,"signal","libc::funcs::posix01::signal",""],[0,"glob","libc::funcs::posix01",""],[5,"glob","libc::funcs::posix01::glob",""],[5,"globfree","",""],[0,"mman","libc::funcs::posix01",""],[5,"posix_madvise","libc::funcs::posix01::mman",""],[0,"bsd43","libc::funcs",""],[5,"socket","libc::funcs::bsd43",""],[5,"connect","",""],[5,"bind","",""],[5,"listen","",""],[5,"accept","",""],[5,"getpeername","",""],[5,"getsockname","",""],[5,"setsockopt","",""],[5,"recv","",""],[5,"send","",""],[5,"recvfrom","",""],[5,"sendto","",""],[5,"getifaddrs","",""],[5,"freeifaddrs","",""],[5,"shutdown","",""],[0,"bsd44","libc::funcs",""],[5,"getdtablesize","libc::funcs::bsd44",""],[5,"ioctl","",""],[5,"madvise","",""],[5,"mincore","",""]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"]]};

searchIndex['gcc'] = {"items":[[0,"","gcc","A library for build scripts to compile custom C code"],[3,"Config","","Extra configuration to pass to gcc."],[5,"compile_library","","Compile a library from the given set of input C files."],[11,"new","","Construct a new instance of a blank set of configuration.",0],[11,"include","","Add a directory to the `-I` or include path for headers",0],[11,"define","","Specify a `-D` variable with an optional value.",0],[11,"object","","Add an arbitrary object file to link in",0],[11,"flag","","Add an arbitrary flag to the invocation of the compiler",0],[11,"file","","Add a file which will be compiled",0],[11,"compile","","Run the compiler, generating the file `output`",0]],"paths":[[3,"Config"]]};

searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator."],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs."]],"paths":[]};

initSearch(searchIndex);
